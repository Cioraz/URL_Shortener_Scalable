events {
    worker_connections 65536;
    use epoll;
    multi_accept on;
    worker_aio_requests 64;  # Increased from 32
}

http {
    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'rt=$request_time uct="$upstream_connect_time" '
                            'uht="$upstream_header_time" urt="$upstream_response_time" '
                            'upstream_addr="$upstream_addr"';

    # Optimized TCP settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    aio threads=default;
    directio 4m;
    
    # Enhanced load optimization
    keepalive_timeout 650;          # Increased
    keepalive_requests 2000000;     # Doubled
    reset_timedout_connection on;
    client_body_timeout 15;         # Increased
    client_header_timeout 15;       # Increased
    
    # Improved buffer settings
    client_body_buffer_size 256k;   # Doubled
    client_max_body_size 100m;      # Increased
    client_header_buffer_size 2k;   # Doubled
    large_client_header_buffers 8 16k;  # Increased
    output_buffers 4 256k;         # Enhanced
    
    # File descriptor cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    upstream backend_servers {
        hash $request_uri consistent;
        server backend1:8000 max_fails=3 fail_timeout=30s max_conns=50000 weight=1;
        server backend2:8000 max_fails=3 fail_timeout=30s max_conns=50000 weight=1;
        server backend3:8000 max_fails=3 fail_timeout=30s max_conns=50000 weight=1;
        keepalive 300;              # Increased
        keepalive_requests 3000000; # Increased
        keepalive_timeout 650s;     # Increased
    }

    server {
        listen 80 backlog=65536 deferred reuseport so_keepalive=on;
        server_name rustyshortener;
        
        # Logging only errors
        access_log off;
        error_log /var/log/nginx/error.log crit;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /dns_resolver/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /generate_url {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Keep-Alive "";
            proxy_set_header Proxy-Connection "keep-alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Enhanced proxy settings
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
            
            # Enhanced buffering
            proxy_buffering on;
            proxy_buffer_size 64k;        # Doubled
            proxy_buffers 16 64k;         # Doubled
            proxy_busy_buffers_size 128k; # Doubled
            proxy_temp_file_write_size 128k;
            
            # Optimized timeouts
            proxy_connect_timeout 15s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Advanced compression
            gzip on;
            gzip_min_length 1k;
            gzip_proxied expired no-cache no-store private auth;
            gzip_types application/json;
            gzip_comp_level 6;
            gzip_vary on;
        }
    }
}
